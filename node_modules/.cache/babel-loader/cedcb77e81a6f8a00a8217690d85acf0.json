{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_metronic_custom_tailwind_template/src/components/table/table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction Tables(props) {\n  _s();\n\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"First Page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"Previous Page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 71\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"Next Page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 70\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"Last Page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tables, \"KqsuGf3FnFNq6eN80CYbjOwL8vo=\", false, function () {\n  return [useStyles1, useTheme];\n});\n\n_c = Tables;\nTables.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData(name, calories, fat) {\n  return {\n    name,\n    calories,\n    fat\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7), createData('Donut', 452, 25.0), createData('Eclair', 262, 16.0), createData('Frozen yoghurt', 159, 6.0), createData('Gingerbread', 356, 16.0), createData('Honeycomb', 408, 3.2), createData('Ice cream sandwich', 237, 9.0), createData('Jelly Bean', 375, 0.0), createData('KitKat', 518, 26.0), createData('Lollipop', 392, 0.2), createData('Marshmallow', 318, 0), createData('Nougat', 360, 19.0), createData('Oreo', 437, 18.0)].sort((a, b) => a.calories < b.calories ? -1 : 1);\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  table: {\n    minWidth: 500\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  }\n}));\nexport default function CustomPaginationActionsTable() {\n  _s2();\n\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.tableWrapper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        children: [/*#__PURE__*/_jsxDEV(TableBody, {\n          children: [rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.fat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: 48 * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10, 25],\n              colSpan: 3,\n              count: rows.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              SelectProps: {\n                inputProps: {\n                  'aria-label': 'Rows per page'\n                },\n                native: true\n              },\n              onChangePage: handleChangePage,\n              onChangeRowsPerPage: handleChangeRowsPerPage,\n              ActionsComponent: TablePaginationActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CustomPaginationActionsTable, \"N7xAgYYZoaGkWr+XDiFUaQf3IRk=\", false, function () {\n  return [useStyles2];\n});\n\n_c2 = CustomPaginationActionsTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tables\");\n$RefreshReg$(_c2, \"CustomPaginationActionsTable\");","map":{"version":3,"sources":["/var/www/html/react_metronic_custom_tailwind_template/src/components/table/table.js"],"names":["React","PropTypes","makeStyles","useTheme","Table","TableBody","TableCell","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","useStyles1","theme","root","flexShrink","color","palette","text","secondary","marginLeft","spacing","Tables","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","createData","name","calories","fat","rows","sort","a","b","useStyles2","width","marginTop","table","minWidth","tableWrapper","overflowX","CustomPaginationActionsTable","setPage","useState","setRowsPerPage","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","height","inputProps","native","TablePaginationActions"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst useStyles1 = makeStyles(theme => ({\n    root: {\n        flexShrink: 0,\n        color: theme.palette.text.secondary,\n        marginLeft: theme.spacing(2.5),\n    },\n}));\n\nfunction Tables(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    function handleFirstPageButtonClick(event) {\n        onChangePage(event, 0);\n    }\n\n    function handleBackButtonClick(event) {\n        onChangePage(event, page - 1);\n    }\n\n    function handleNextButtonClick(event) {\n        onChangePage(event, page + 1);\n    }\n\n    function handleLastPageButtonClick(event) {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    }\n\n    return (\n        <div className={classes.root}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"First Page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"Next Page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"Last Page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n}\n\nTables.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n     return { name, calories, fat };\n}\n\nconst rows = [\n    createData('Cupcake', 305, 3.7),\n    createData('Donut', 452, 25.0),\n    createData('Eclair', 262, 16.0),\n    createData('Frozen yoghurt', 159, 6.0),\n    createData('Gingerbread', 356, 16.0),\n    createData('Honeycomb', 408, 3.2),\n    createData('Ice cream sandwich', 237, 9.0),\n    createData('Jelly Bean', 375, 0.0),\n    createData('KitKat', 518, 26.0),\n    createData('Lollipop', 392, 0.2),\n    createData('Marshmallow', 318, 0),\n    createData('Nougat', 360, 19.0),\n    createData('Oreo', 437, 18.0),\n    ].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\nconst useStyles2 = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    table: {\n        minWidth: 500,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n}));\n\nexport default function CustomPaginationActionsTable() {\n    const classes = useStyles2();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    function handleChangePage(event, newPage) {\n        setPage(newPage);\n    }\n\n    function handleChangeRowsPerPage(event) {\n        setRowsPerPage(parseInt(event.target.value, 10));\n    }\n\n    return (\n        <Paper className={classes.root}>\n            <div className={classes.tableWrapper}>\n            <Table className={classes.table}>\n                <TableBody>\n                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                    <TableRow key={row.name}>\n                        <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.calories}</TableCell>\n                        <TableCell align=\"right\">{row.fat}</TableCell>\n                    </TableRow>\n                    ))}\n\n                    {emptyRows > 0 && (\n                    <TableRow style={{ height: 48 * emptyRows }}>\n                        <TableCell colSpan={6} />\n                    </TableRow>\n                    )}\n                </TableBody>\n                <TableFooter>\n                    <TableRow>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        colSpan={3}\n                        count={rows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        SelectProps={{\n                        inputProps: { 'aria-label': 'Rows per page' },\n                        native: true,\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                    />\n                    </TableRow>\n                </TableFooter>\n            </Table>\n        </div>\n        </Paper>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}